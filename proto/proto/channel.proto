syntax = "proto3";

package proto.channel;

import "common.proto";
import "chain.proto";

message HandshakeHello {
  proto.common.Endpoint from = 1;
  int32 version = 2;
  int64 timestamp = 3;
  proto.common.BlockId genesis_block_id = 4;  // number=0
  proto.common.BlockId solid_block_id = 5;
  proto.common.BlockId head_block_id = 6;
  bytes address = 7;
  bytes signature = 8;
}

enum ReasonCode {
  REQUESTED = 0x00;
  BAD_PROTOCOL = 0x02;
  TOO_MANY_PEERS = 0x04;
  DUPLICATE_PEER = 0x05;
  INCOMPATIBLE_PROTOCOL = 0x06;
  NULL_IDENTITY = 0x07;
  PEER_QUITING = 0x08;
  UNEXPECTED_IDENTITY = 0x09;
  LOCAL_IDENTITY = 0x0A;
  PING_TIMEOUT = 0x0B;
  USER_REASON = 0x10;
  RESET = 0x11;
  SYNC_FAIL = 0x12;
  FETCH_FAIL = 0x13;
  BAD_TX = 0x14;
  BAD_BLOCK = 0x15;
  FORKED = 0x16;
  UNLINKABLE = 0x17;
  INCOMPATIBLE_VERSION = 0x18;
  INCOMPATIBLE_CHAIN = 0x19;
  TIME_OUT = 0x20;
  CONNECT_FAIL = 0x21;
  TOO_MANY_PEERS_WITH_SAME_IP = 0x22;
  UNKNOWN = 0xFF;
}

message HandshakeDisconnect {
  ReasonCode reason = 1;
}

message ChainInventory {
  repeated proto.common.BlockId ids = 1;
  int64 remain_num = 2;
}

message BlockInventory {
  enum Type {
    SYNC = 0;
    ADVTISE = 1;  // unused
    FETCH = 2;    // unused
  }
  repeated proto.common.BlockId ids = 1;
  Type type = 2;
}

message Inventory {
  enum Type {
    TRX = 0;
    BLOCK = 1;
  }
  Type type = 1;
  repeated bytes ids = 2;
}

message Transactions {
  repeated proto.chain.Transaction transactions = 1;
}

/*
message Items {
  enum ItemType {
    ERR = 0;
    TRX = 1;
    BLOCK = 2;
    BLOCKHEADER = 3;
  }

  ItemType type = 1;
  repeated Block blocks = 2;
  repeated BlockHeader block_headers = 3;
  repeated Transaction transactions = 4;
}
*/
